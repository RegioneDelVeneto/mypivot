#
#     MyPivot - Accounting reconciliation system of Regione Veneto.
#     Copyright (C) 2022  Regione Veneto
#
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU Affero General Public License as
#     published by the Free Software Foundation, either version 3 of the
#     License, or (at your option) any later version.
#
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU Affero General Public License for more details.
#
#     You should have received a copy of the GNU Affero General Public License
#     along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

#
# Base configuration of MyPay4 app
# WARNING! It's compulsory to override this base configuration for the
#          env-dependent parameters (ex.: ?DB_HOSTNAME?)
#

# start internal settings - DO NOT MODIFY THIS SERCTION
spring.main.allow-circular-references=true
server.error.whitelabel.enabled=false
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
# end internal settings

#
# Data sources configuration
#

spring.datasource.pivot.driverClassName=org.postgresql.Driver
spring.datasource.pivot.url=jdbc:postgresql://?DB_HOSTNAME?:5432/?DB?
spring.datasource.pivot.username=?DB_USER?
spring.datasource.pivot.password=?DB_PASSWORD?
spring.datasource.pivot.minimumIdle=5
spring.datasource.pivot.maximumPoolSize=10

# print message in case of error
server.error.include-message=always

#
# Log configuration
#

spring.application.name=mypivot4
#logging.file.name=${java.io.tmpdir}/${spring.application.name}.log
logging.level.root=INFO
#this format will replace the newlines in the stacktrace with a non-printing UTF8 char (it could be replaced with any character in case): useful when importing logs in platforms like ELK
mypay4.logging.stacktrace.file=%replace(%xEx){'\n','\u2028'}%nopex%n
#this format will print the stacktrace in many lines (one for every stack trace element): useful for humans, but poorly readible when importing logs in platforms like ELK
mypay4.logging.stacktrace.console=%n%xEx
logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(user=%X{user:--} level=%p marker=%replace(%marker){'^$', '-'}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%t]){faint} %clr(%logger{39}){cyan} %clr(:){faint} %m${mypay4.logging.stacktrace.console}
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} user=%X{user:--} level=%p marker=%replace(%marker){'^$', '-'} ${PID:- } --- [%t] %logger{39} : %m${mypay4.logging.stacktrace.file}

# specific logging
logging.level.it.regioneveneto.mygov.payment=DEBUG
#logging.level.it.regioneveneto.mygov.payment.mypivot4.WebApplication=TRACE
#logging.level.org.springframework.cache=TRACE
#logging.level.org.springframework.transaction.interceptor=TRACE
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG


# define aspect-based logging of datasource connection pool:
#   false: disabled
#   true : enabled
datasource-pool-logging.enabled=false

# define logging of sql statements:
#   false : completely disabled
#   short : minimal logging (no out params logged)
#   true  : full log including in/out params
sql-logging.enabled=short

# define aspect-based loggging of methods execution:
#   false : completely disabled
#   method: minimal logging (no in/out params logged)
#   true  : full log including in/out params
method-execution-logging.enabled=method

# enable log of any http request (incluse headers and payload)
request-logging.enabled=false


#
# JWT configuration
#

#you may use class JwtTokenUtil to generate a random new secret
# (the value provided in this file is just an example and should not be used in real environments)
jwt.secret=Qe05zVOqH0t/SJNvGl7lAihWPBLxJSjAQlDSxofrQ20Nb3dzSpcGLTu9X6mxEEEfC/wdpJ1M9qtZKsgU3U/Wwg==
jwt.validity.seconds=900
jwt.usage-check.grace-period.milliseconds=3000
jwt.usage-check.enabled=true
jwt.usage-check.ignorelongcall.milliseconds=10000
jwt.rolling-token.enabled=true

#
# Cache configuration (Redis)
#

# allowed cache types:
#   sentinel
#   cluster
#   standalone
cache.type=standalone
# sentinel specific properties
cache.sentinelMaster=mymaster
cache.sentinelNodes=127.0.0.1:6379,127.0.0.1:6380
# cluster specific properties
cache.clusterNodes=127.0.0.1:6379,127.0.0.1:6380
cache.clusterMaxRedirects=3
# standalone specific properties
cache.useEmbeddedRedis=false
cache.standaloneHost=localhost
cache.standalonePort=6379
# common properties for every cache type
cache.password=
cache.cachePrefix=MyPivot4
#timeout default
cache.timeoutSeconds=60
#timeout per cache in seconds (uncomment to enable)
#cache.cacheExpirations.enteCache=3600
#cache.cacheExpirations.allObjectCache=1800
cache.cacheExpirations.jwtTokenUsageCache=${jwt.validity.seconds}
cache.cacheExpirations.uploadCache=900


#
# Application properties
#

# max file size for upload feature
upload.max-size-MiB=10
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# max number of record for riconciliazioni / anomalie export feature
export.max-records=100000
# query limit (max results)
jdbc.limit.default=500


#
# Enable CORS
#

# if cors is enabled, the token is stored in header, otherwise into an https only secure cookie
cors.enabled=false


#
# Spring Boot to serve static content configuration
#

static.serve.enabled=false
static.serve.paths=/pivot
static.serve.locations=?ABS_PATH_MYPIVOT4?/mypivot4-fe/dist/mypivot4-fe


#
# Application Context (HTTP/HTTPS)
#

server.forward-headers-strategy=framework
server.use-forward-headers=true
server.ssl.enabled=true
server.port=443
server.http.port=80
# (the value provided in this file is just an example and should not be used in real environments)
server.ssl.key-store=classpath:ssl-springboot-keystore.jks
server.ssl.key-store-password=password
server.ssl.key-alias=localhost
server.ssl.key-password=password
server.servlet.context-path=/
server.error.path=/failure

#absolute public path of mypivot4 components
app.be.absolute-path=http://localhost:8080
app.fe.absolute-path=http://localhost:4202

# Auth
auth.fake.enabled = false

#
# default intermediario
#
pivot.identificativoIntermediarioPA=?
pivot.identificativoIntermediarioPA.name=Intermediario default

#
# Storage / MyBox
#

mybox.path.root=?MYBOX_ROOT?
mypay.path.relative.data=DATA
mypay.path.manage=${mybox.path.root}/MANAGE
mypay.path.manage.log=${mypay.path.manage}/log


#
# Parameters used to configure temporary blocks on functionalities
# leave empty to disable any whitelist/blacklist
#

block.whitelist.payercf=
block.blacklist.payercf=
block.whitelist.operation=
block.blacklist.operation=
# error message shown when operation is blocked
block.errorMessage=Operazione non disponibile al momento


#
# MyProfile
#

myprofile.baseUrl=http://myprofile.localhost/myprofile-server/api/
myprofile.applCode=MY_PIVOT

mypivot.codIpaEntePredefinito=?


#
# Active MQ - Artemis
#

spring.artemis.host=?MQ_SERVER?
spring.artemis.port=0
spring.artemis.user=?MQ_USER?
spring.artemis.password=?MQ_PWD?
#disable producer caching (it create troubles with ActiveMQ when it autodeletes destinations)
spring.jms.cache.producers=false

queue.export-pagati=EXPORT_PAGATI
queue.rendicontazione-standard=RENDICONTAZIONE_STANDARD
queue.tesoreria=TESORERIA
queue.export-dovuti=EXPORT_DOVUTI

#
# Upload
#

dovuti.import-path=/IMPORT_PAGATI_MP/
flussiexport.import-path=/EXPORT_FLUSSI_MP/WEB/
rendicontazione.import-path=/RENDICONTAZIONE_FLUSSI_MP/WEB/STANDARD/
tesoreria.import-path=/TESORERIA_FLUSSI_MP/
flussoposte.import-path=/TESORERIA_FLUSSI_MP/WEB/POSTE/


#
# Springdoc Openapi Documentation
#
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/public/api-docs
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/public/swagger-ui.html
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.showCommonExtensions=true


#
# Web Services SOAP
#
# determine whether to use static/dynamic WSDL

ws.wsdl=static


#
# Application 2 application API call on MyPay4
#

# private key used to generate JWT token when invoking MyPay API
# (the value provided in this file is just an example and should not be used in real environments)
a2a.mypay.private=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
# base url of MyPay4 API
a2a.mypay.baseUrl=http://localhost:8080/
